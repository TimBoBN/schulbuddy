name: Multi-Platform Docker Build

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*'
  
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag f√ºr das Multi-Platform Image (z.B. v1.1.0, latest)'
        required: true
        default: 'latest'

jobs:
  multi-platform-build:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # Erh√∂hter Timeout f√ºr Multi-Platform Builds
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Debug workflow trigger
        run: |
          echo "üöÄ Multi-Platform Build gestartet!"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Input Version: ${{ github.event.inputs.version_tag }}"
      
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Version and Repository Info
        id: meta
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manueller Trigger
            VERSION="${{ github.event.inputs.version_tag }}"
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Tag-Push
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            # Branch-Push
            BRANCH="${GITHUB_REF#refs/heads/}"
            TIMESTAMP=$(date +'%Y%m%d%H%M%S')
            VERSION="${BRANCH}-${TIMESTAMP}"
          fi
          
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "Multi-Platform Version: ${VERSION}"
          
          # Repository Owner in Kleinbuchstaben
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER=${OWNER}" >> $GITHUB_OUTPUT
          echo "Repository owner: ${OWNER}"
      
      - name: Build and Push True Multi-Platform Images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: |
            type=gha,scope=multiplatform-build
          cache-to: |
            type=gha,scope=multiplatform-build,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/schulbuddy:${{ steps.meta.outputs.VERSION }}-multiplatform
            ghcr.io/${{ steps.meta.outputs.OWNER }}/schulbuddy:${{ steps.meta.outputs.VERSION }}-multiplatform
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.repository.created_at }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.description=SchulBuddy Multi-Platform (AMD64/ARM64/ARMv7)
      
      - name: Create Branch-specific Tags
        if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: |
            type=gha,scope=multiplatform-build
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/schulbuddy:${{ github.ref == 'refs/heads/main' && 'latest-multiplatform' || 'dev-multiplatform' }}
            ghcr.io/${{ steps.meta.outputs.OWNER }}/schulbuddy:${{ github.ref == 'refs/heads/main' && 'latest-multiplatform' || 'dev-multiplatform' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.repository.created_at }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.description=SchulBuddy Multi-Platform (AMD64/ARM64/ARMv7)
      
      - name: Verify Multi-Platform Images
        run: |
          echo "üîç Verifying Multi-Platform Build..."
          
          # Inspiziere die erstellten Multi-Platform Images
          echo "üì¶ Version-specific Multi-Platform Image:"
          docker manifest inspect ${{ secrets.DOCKERHUB_USERNAME }}/schulbuddy:${{ steps.meta.outputs.VERSION }}-multiplatform || echo "Version manifest not ready yet"
          
          # Inspiziere Branch-specific Images falls vorhanden
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "üì¶ Latest Multi-Platform Image:"
            docker manifest inspect ${{ secrets.DOCKERHUB_USERNAME }}/schulbuddy:latest-multiplatform || echo "Latest manifest not ready yet"
          fi
          
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "üì¶ Dev Multi-Platform Image:"
            docker manifest inspect ${{ secrets.DOCKERHUB_USERNAME }}/schulbuddy:dev-multiplatform || echo "Dev manifest not ready yet"
          fi
          
          echo "‚úÖ Multi-Platform Build verification completed!"
      - name: Summary
        if: always()
        run: |
          echo "üéâ Multi-Platform Build Summary"
          echo "=============================="
          echo "Version: ${{ steps.meta.outputs.VERSION }}"
          echo ""
          echo "üê≥ Verf√ºgbare Multi-Platform Images:"
          echo "‚Ä¢ docker.io/timbobn/schulbuddy:${{ steps.meta.outputs.VERSION }}-multiplatform"
          echo "‚Ä¢ ghcr.io/timbobn/schulbuddy:${{ steps.meta.outputs.VERSION }}-multiplatform"
          
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "‚Ä¢ docker.io/timbobn/schulbuddy:latest-multiplatform"
            echo "‚Ä¢ ghcr.io/timbobn/schulbuddy:latest-multiplatform"
          fi
          
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "‚Ä¢ docker.io/timbobn/schulbuddy:dev-multiplatform"
            echo "‚Ä¢ ghcr.io/timbobn/schulbuddy:dev-multiplatform"
          fi
          
          echo ""
          echo "üß™ Test Commands:"
          echo "docker manifest inspect docker.io/timbobn/schulbuddy:${{ steps.meta.outputs.VERSION }}-multiplatform"
          echo "docker pull docker.io/timbobn/schulbuddy:${{ steps.meta.outputs.VERSION }}-multiplatform"
          echo ""
          echo "‚úÖ Multi-Platform Build completed!"
