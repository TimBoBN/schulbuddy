name: Docker Build and Push to GHCR

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*' # Wird ausgeführt, wenn Tags wie v1.0.0, v1.1.0 etc. gepusht werden
  
  # Manuelle Ausführung über die GitHub UI ermöglichen
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag für das Docker Image (z.B. v1.1.0)'
        required: true
        default: 'latest'

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    
    # Wichtige Berechtigungen für GHCR
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Version and Owner
        id: vars
        run: |
          # Extrahiere Version
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manueller Trigger - verwende Input
            echo "VERSION=${{ github.event.inputs.version_tag }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Tag-Push - verwende Tag
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            # Branch-Push - verwende Branch-Namen
            BRANCH=${GITHUB_REF#refs/heads/}
            echo "VERSION=${BRANCH}-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          fi
          
          # Repository Owner in Kleinbuchstaben
          echo "OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,arm

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          tags: |
            ghcr.io/${{ steps.vars.outputs.OWNER }}/schulbuddy:${{ steps.vars.outputs.VERSION }}
            ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.version_tag != 'dev')) && format('ghcr.io/{0}/schulbuddy:latest', steps.vars.outputs.OWNER) || '' }}
            ${{ github.ref == 'refs/heads/dev' && format('ghcr.io/{0}/schulbuddy:dev', steps.vars.outputs.OWNER) || '' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.repository.created_at }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ steps.vars.outputs.OWNER }}/schulbuddy:buildcache
            type=gha
          cache-to: |
            type=registry,ref=ghcr.io/${{ steps.vars.outputs.OWNER }}/schulbuddy:buildcache,mode=max
            type=gha,mode=max
