services:
  schulbuddy:
    # Docker Hub Image
    image: docker.io/timbobn/schulbuddy:${TAG:-latest}
    # Für GitHub Container Registry (GHCR), kommentiere die obere Zeile aus und verwende stattdessen:
    # image: ghcr.io/timbobn/schulbuddy:${TAG:-latest}
    container_name: schulbuddy-app
    # Führe die entrypoint Logik direkt aus, da scripts/ Ordner nicht im Image ist
    command: >
      /bin/bash -c "
      echo 'Starting container as root to handle permissions...';
      mkdir -p /app/instance /app/static/uploads;
      echo 'Current directory permissions:';
      ls -la /app/;
      echo 'Environment variables:';
      echo 'DOCKER_ENV:' $$DOCKER_ENV;
      echo 'Testing database configuration...';
      python3 -c 'import os, sys; sys.path.insert(0, \"/app\"); print(\"DOCKER_ENV value:\", repr(os.environ.get(\"DOCKER_ENV\"))); from config import Config; print(\"Config.SQLALCHEMY_DATABASE_URI:\", Config.SQLALCHEMY_DATABASE_URI)';
      echo 'Testing SQLite creation in /app/data...';
      touch /app/data/test.db;
      ls -la /app/data/;
      echo 'Starting application...';
      exec python /app/app.py
      "
    ports:
      - "${EXTERNAL_PORT:-5000}:${PORT:-5000}"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-your-production-secret-key-change-this}
      - DATABASE_URL=sqlite:////app/data/schulbuddy.db
      - DOCKER_ENV=1
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-5000}
      - SESSION_TIMEOUT_MINUTES=120
      - REMEMBER_COOKIE_DAYS=30
      - LOGIN_TIMEOUT_MINUTES=60
      - MAX_LOGIN_ATTEMPTS=5
      - LOGIN_ATTEMPT_TIMEOUT_MINUTES=15
      - CURRENT_SCHOOL_YEAR=2024/25
      - CURRENT_SEMESTER=1
    volumes:
      - ./instance:/app/data
      - ./static/uploads:/app/static/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


volumes:
  schulbuddy_data:
    driver: local
  schulbuddy_uploads:
    driver: local

