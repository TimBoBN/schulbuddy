services:
  schulbuddy:
    # Multi-Platform Docker Images (echter Multi-Arch Support)
    # Diese Images enthalten automatische Architektur-Erkennung
    image: docker.io/timbobn/schulbuddy:${TAG:-dev}
    
    # Alternative: GitHub Container Registry  
    # image: ghcr.io/timbobn/schulbuddy:${TAG:-dev}
    
    container_name: schulbuddy-app
    
    # Entrypoint-Script mit automatischer Architektur-Erkennung
    # Das Script erkennt ARM/AMD64 und passt Gunicorn-Worker entsprechend an
    command: >
      /bin/bash -c "
      chmod +x /app/entrypoint.sh;
      echo 'Starte SchulBuddy Multi-Platform Container...';
      echo 'Erkannte Architektur:' $(uname -m);
      echo 'Docker Platform:' $(uname -a);
      /app/entrypoint.sh
      "
    ports:
      - "${EXTERNAL_PORT:-5000}:${PORT:-5000}"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-your-production-secret-key-change-this}
      - DATABASE_URL=sqlite:////app/data/schulbuddy.db
      - DOCKER_ENV=1
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-5000}
      - SESSION_TIMEOUT_MINUTES=120
      - REMEMBER_COOKIE_DAYS=30
      - LOGIN_TIMEOUT_MINUTES=60
      - MAX_LOGIN_ATTEMPTS=5
      - LOGIN_ATTEMPT_TIMEOUT_MINUTES=15
      - CURRENT_SCHOOL_YEAR=2024/25
      - CURRENT_SEMESTER=1
      # Multi-Arch Konfiguration (automatisch durch entrypoint.sh)
      - WORKERS=${WORKERS:-auto}  # auto = architekturabhängig (2 für ARM, 4 für AMD64)
      - WORKER_CLASS=${WORKER_CLASS:-sync}
      - TIMEOUT=${TIMEOUT:-120}
    volumes:
      - ./instance:/app/data
      - ./static/uploads:/app/static/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  schulbuddy_data:
    driver: local
  schulbuddy_uploads:
    driver: local
